services:
  auth_service:
    container_name: auth_service
    build:
      context: ./auth_service/api
      dockerfile: Dockerfile
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    restart: on-failure
    env_file:
      - ./auth_service/envs/.api.env
    ports:
      - "8001:8000"
    environment:
      - CONSUL_HTTP_ADR=http://consul:8500
    volumes:
      - ./auth_service/api:/app:delegated
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - auth_db
      - redis
      - consul
    networks:
      - backend_services

  auth_db:
    container_name: auth_db
    image: postgres:17.2
    volumes:
      - auth_db_volume:/var/lib/postgresql/data
    env_file:
      - auth_service/envs/.db.env
    ports:
      - "5432:5432"
    networks:
      - backend_services

  product_service:
    container_name: product_service
    build:
      context: ./product_service/api
      dockerfile: Dockerfile
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    restart: on-failure
    env_file:
      - ./product_service/envs/.api.env
    ports:
      - "8002:8000"
    environment:
      - CONSUL_HTTP_ADR=http://consul:8500
    depends_on:
      - product_db
      - auth_service
      - redis
      - consul
    networks:
      - backend_services

  product_db:
    container_name: product_db
    image: postgres:17.2
    volumes:
      - product_db_volume:/var/lib/postgresql/data
    env_file:
      - product_service/envs/.db.env
    ports:
      - "5433:5432"
    networks:
      - backend_services

  kong:
    image: kong:3.0.0-alpine
    container_name: kong
    restart: always
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8081
      - KONG_DISCOVERY=consul
      - KONG_CONTACT_POINTS=consul:8500
      - KONG_PORT=8080
    depends_on:
      - consul
    networks:
      - backend_services
    ports:
      - "8080:8080"  # Proxy port
      - "8081:8081"  # Admin API port

  redis:
    container_name: redis
    image: redis:8.0-M02
    ports:
      - "6379:6379"
    networks:
      - backend_services

  consul:
    container_name: consul
    image: consul:1.12.9
    ports:
      - "8500:8500"
      - "8600:8600/udp"
      - "8600:8600"
    environment:
      CONSUL_LOCAL_CONFIG: '{"enable_service_discovery": true}'
    command: consul agent -dev -client=0.0.0.0
    networks:
      - backend_services

  service_registrar:
    container_name: service_registrar
    build:
      context: ./service_discovery
      dockerfile: Dockerfile
    depends_on:
      - consul
    networks:
      - backend_services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  auth_db_volume:
  static_volume:
  media_volume:
  product_db_volume:
  kong-config:

networks:
  backend_services:
    driver: bridge
