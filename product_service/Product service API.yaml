openapi: 3.0.3
info:
  title: Product service API
  version: 1.0.0
  description: Product microservice
paths:
  /api/v1/categories/:
    get:
      operationId: v1_categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - v1
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/v1/categories/{id}/:
    get:
      operationId: v1_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/categories/{id}/subcategories/:
    get:
      operationId: v1_categories_subcategories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryWithSubcategories'
          description: ''
  /api/v1/products/:
    get:
      operationId: v1_products_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - v1
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: v1_products_create
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: v1_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - v1
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: v1_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: v1_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: v1_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - v1
      security:
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
      required:
      - id
      - name
    CategoryWithSubcategories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Subcategory'
      required:
      - id
      - name
      - subcategories
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
        popularity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Incrementation when user sees details page.
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Rank from review service
        barcode:
          type: string
          maxLength: 13
        stock_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Subcategory'
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
        popularity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Incrementation when user sees details page.
        rank:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Rank from review service
        barcode:
          type: string
          maxLength: 13
        stock_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Subcategory'
      required:
      - categories
      - description
      - id
      - image
      - name
      - price
      - rank
      - subcategories
    Subcategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
      required:
      - id
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
